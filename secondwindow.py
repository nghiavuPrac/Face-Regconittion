# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'secondwindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.





from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox
import os.path
import os
from PIL import Image
import numpy as np
import cv2

class Ui_SecondWindow(object):
    pathName = os.getcwd()+"\Face-Regconittion\listOfUser.txt"
    def remove_unused(self):
        tempName= os.getcwd()+"\Face-Regconittion\Temp.txt"
        with open(self.pathName,'r') as reader:
            with open(tempName,'w') as writer:    
                for line in reader:
                    info = line.rstrip().split(",")
                    fileName = os.getcwd()+ "\\Face-Regconittion\\FacialRecognition\\dataset\\User." + str(info[0]) +".1.jpg"
                    if(os.path.exists(fileName)):#write back to file if id have picture
                        writer.write(line)
        os.replace(tempName, self.pathName)
        

    #Check Valid(co 3 truong hop):
    #1:File khong ton tai
    #2:Trung id
    #3:Chua co ten
    def check_valid(self,id):
        checkId = []
        with open(self.pathName) as reader:
            for line in reader:
                info = line.rstrip().split(",")
                checkId.append(info[0])
        if(id in checkId):
            return checkId
    
        return True
        

    def take_input(self):
        id = self.spinBox.text()
        name = self.lineEdit.text()
        if(len(name)==0):
            self.warning_message("chua nhap ten kia!")
            return 1
        if(os.path.exists(self.pathName)):
            #remove false user id
            self.remove_unused()
            check = self.check_valid(id)
            if(check == True):
                with open(self.pathName,'a') as writer:
                    writer.write(id + "," + name + "\n")
            else:
                self.warning_message("Trùng id rồi kìa!\n Những id đã bị chiếm: " + str(check))
                return 1
        else:    
            with open(self.pathName,'w') as writer:
                writer.write(id + "," + name + "\n")
        self.infrom_message("User save successfully!\nClick 'ok' to start collect and train data!")
        self.collect_data()
        self.infrom_message("Data collect succefully!\nClick 'ok' to start training")
        self.train_model()
        self.infrom_message("Training succefully!")
        sys.exit()
        
    def warning_message(self,message):
        msg = QMessageBox()
        msg.setIcon(QMessageBox.Critical)
        msg.setText(message)
        msg.setWindowTitle("Error")
        msg.setEscapeButton(QMessageBox.Ok)
        msg.exec_()   
    
    def infrom_message(self,message):
        imsg = QMessageBox()
        imsg.setIcon(QMessageBox.Information)
        imsg.setText(message)
        imsg.setWindowTitle("Information")
        imsg.setEscapeButton(QMessageBox.Ok)
        imsg.exec_()

    def collect_data(self):
        #need direct file path
        exec(open(os.getcwd() + "\Face-Regconittion\FacialRecognition\Dataset.py").read())
    
    def train_model(self):
        #need direct file path
        exec(open("Face-Regconittion\FacialRecognition\Training.py").read())
        

    def setupUi(self, SecondWindow):
        SecondWindow.setObjectName("SecondWindow")
        SecondWindow.resize(396, 291)
        SecondWindow.setSizeGripEnabled(False)
        self.boxbutton = QtWidgets.QDialogButtonBox(SecondWindow)
        self.boxbutton.setGeometry(QtCore.QRect(30, 240, 341, 32))
        self.boxbutton.setOrientation(QtCore.Qt.Horizontal)
        self.boxbutton.setStandardButtons(QtWidgets.QDialogButtonBox.Cancel|QtWidgets.QDialogButtonBox.Ok)
        self.boxbutton.setObjectName("boxbutton")

        self.spinBox = QtWidgets.QSpinBox(SecondWindow)
        self.spinBox.setGeometry(QtCore.QRect(120, 130, 42, 22))
        self.spinBox.setObjectName("spinBox")
        
        self.lineEdit = QtWidgets.QLineEdit(SecondWindow)
        self.lineEdit.setGeometry(QtCore.QRect(120, 170, 151, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.lineEdit.setFont(font)
        self.lineEdit.setObjectName("lineEdit")

        self.label = QtWidgets.QLabel(SecondWindow)
        self.label.setGeometry(QtCore.QRect(40, 130, 71, 16))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label.setFont(font)
        self.label.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.label.setFrameShadow(QtWidgets.QFrame.Plain)
        self.label.setScaledContents(False)
        self.label.setWordWrap(False)
        self.label.setObjectName("label")
        self.textBrowser = QtWidgets.QTextBrowser(SecondWindow)
        self.textBrowser.setGeometry(QtCore.QRect(60, 40, 291, 51))
        self.textBrowser.setObjectName("textBrowser")
        self.label_2 = QtWidgets.QLabel(SecondWindow)
        self.label_2.setGeometry(QtCore.QRect(20, 170, 91, 16))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")

        self.retranslateUi(SecondWindow)
        self.boxbutton.accepted.connect(lambda: self.take_input())
        self.boxbutton.rejected.connect(SecondWindow.reject)
        QtCore.QMetaObject.connectSlotsByName(SecondWindow)

    def retranslateUi(self, SecondWindow):
        _translate = QtCore.QCoreApplication.translate
        SecondWindow.setWindowTitle(_translate("SecondWindow", "Dialog"))
        self.label.setText(_translate("SecondWindow", "User Id :"))
        self.textBrowser.setHtml(_translate("SecondWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:18pt; font-weight:600; color:#ff0000;\">USER REGISTER</span></p></body></html>"))
        self.label_2.setText(_translate("SecondWindow", "User Name:"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    SecondWindow = QtWidgets.QDialog()
    ui = Ui_SecondWindow()
    ui.setupUi(SecondWindow)
    SecondWindow.show()
    sys.exit(app.exec_())
    
    
